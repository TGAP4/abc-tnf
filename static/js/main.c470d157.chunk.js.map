{"version":3,"sources":["App/components/navbar/navbar/navbar.styles.jsx","App/redux/types.jsx","App/components/navbar/loginModal/loginModal.styles.jsx","App/components/navbar/loginModal/loginModal.jsx","App/redux/actions.jsx","App/components/navbar/navbar/navbar.jsx","App/pages/home/home.styles.jsx","App/assets/audio/get_schwifty.mp3","App/assets/images/volume-icon.png","App/assets/images/rick-morty.jpg","App/pages/home/home.jsx","App/pages/characters/characters.styles.jsx","App/pages/characters/characterCard/characterCard.styles.jsx","App/pages/characters/characterCard/characterCard.jsx","App/pages/characters/characterModal/characterModal.styles.jsx","App/pages/characters/characterModal/characterModal.jsx","App/pages/characters/characters.jsx","App/pages/episodes/episodes.styles.jsx","App/pages/episodes/episodeCard/episodeCard.styles.jsx","App/pages/episodes/episodeCard/episodeCard.jsx","App/pages/episodes/episodeModal/episodeModal.styles.jsx","App/pages/episodes/episodeModal/episodeModal.jsx","App/pages/episodes/episodes.jsx","App/App.js","App/redux/reducer.jsx","App/redux/store.jsx","index.js"],"names":["Navbar","styled","div","Title","NavLinks","NavLink","SIGNUP_LOGIN","LOGOUT","Modal","XButton","Field","Input","input","error","Button","LoginModal","props","modalType","setModalType","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","submitted","setSubmitted","success","setSuccess","onClick","type","onChange","e","target","value","payload","signupLogin","currentUser","useSelector","state","as","Link","to","Home","MainImage","img","VolumeIcon","muted","setMuted","id","src","getSchwifty","mainImage","alt","volumeIcon","song","document","getElementById","play","pause","Container","Characters","ErrorMessage","Card","Label","MoreInfo","CharacterCard","character","setModalCharacter","origin","window","scrollTo","Image","Info","CharacterModal","episodeNames","setEpisodeNames","useEffect","episodes","episode","forEach","episodeUrl","a","axios","get","responseJson","push","data","length","image","created","gender","location","species","status","map","episodeName","i","characters","setCharacters","modalCharacter","setError","characterIds","Episodes","EpisodeCard","setModalEpisode","air_date","EpisodeModal","characterNames","setCharacterNames","characterUrl","characterName","setEpisodes","modalEpisode","episodeIds","App","exact","path","component","persistConfig","key","storage","transforms","createWhitelistFilter","INITIAL_STATE","modal","open","persistedReducer","persistReducer","action","store","createStore","persistor","persistStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.c470d157.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Navbar = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  background: black;\n  color: white;\n`;\n\nexport const Title = styled.div`\n  margin: 20px auto;\n  font-weight: 700;\n  font-size: 36px;\n  cursor: pointer;\n  text-decoration: none;\n  color: white;\n  z-index: 10;\n\n  @media (max-width: 500px) {\n    font-size: 20px;\n  }\n`;\n\nexport const NavLinks = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 100%;\n  position: absolute;\n  right: 25px;\n  box-sizing: border-box;\n\n  @media (max-width: 800px) {\n    width: 100%;\n    right: 0;\n    padding: 0 4vw;\n    margin: 0 auto;\n  }\n\n  @media (max-width: 500px) {\n    font-size: 14px;\n  }\n`;\n\nexport const NavLink = styled.div`\n  margin: 0 15px;\n  cursor: pointer;\n\n  @media (max-width: 800px) {\n    margin: 0;\n  }\n`;","export const SIGNUP_LOGIN = 'SIGNUP_LOGIN';\nexport const LOGOUT = 'LOGOUT';\n","import styled from 'styled-components';\n\nexport const Modal = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #EEEEEE;\n  padding: 40px 50px;\n  margin: auto;\n  border-radius: 5px;\n  font-weight: 500;\n  position: absolute;\n  z-index: 100;\n  top: 45px;\n  left: calc(50% - 166px);\n  box-shadow: 0 30px 30px black;\n`;\n\nexport const XButton = styled.div`\n  color: gray;\n  position: absolute;\n  top: 10px;\n  right: 12px;\n  cursor: pointer;\n`;\n\nexport const Title = styled.div`\n  font-size: 28px;\n  line-height: 28px;\n  font-weight: 700;\n`;\n\nexport const Field = styled.div`\n  margin-top: 18px;\n`;\n\nexport const Input = styled.input`\n  border-radius: 3px;\n  border: 1px solid ${({error}) => error ? 'orange' : 'black'};\n  padding: 10px 15px;\n  width: 200px;\n  margin-top: 5px;\n`;\n\nexport const Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 15px 30px;\n  cursor: pointer;\n  background: green;\n  margin-top: 25px;\n  border-radius: 3px;\n  color: white;\n  font-weight: 600;\n`;","import React, {useState} from 'react';\nimport * as S from './loginModal.styles';\n\nimport { useDispatch } from 'react-redux';\nimport { signupLogin } from '../../../redux/actions';\n\n\nconst LoginModal = (props) => {\n  const {\n    modalType,\n    setModalType,\n  } = props;\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = () => {\n    setSubmitted(true);\n\n    if (!name || !email || !password) return;\n\n    if (modalType === 'Sign Up' && password !== confirmPassword) return;\n\n    dispatch(signupLogin(email));\n    setSuccess(true);\n  }\n\n  return (\n    <>\n      {!success ? (\n        <S.Modal>\n          <S.XButton\n            onClick={() => setModalType('')}\n          >\n            X\n          </S.XButton>\n          <S.Title>\n            {modalType}\n          </S.Title>\n          <S.Field>\n            <div>NAME</div>\n            <S.Input \n              type='text'\n              onChange={e => setName(e.target.value)}\n              value={name}\n              error={submitted && !name}\n            />\n          </S.Field>\n          <S.Field>\n            <div>EMAIL</div>\n            <S.Input \n              type='email'\n              onChange={e => setEmail(e.target.value)}\n              value={email}\n              error={submitted && !email}\n            />\n          </S.Field>\n          <S.Field>\n            <div>PASSWORD</div>\n            <S.Input \n              type='password'\n              onChange={e => setPassword(e.target.value)}\n              value={password}\n              error={submitted && (!password || (password !== confirmPassword))}\n              />\n          </S.Field>\n          {modalType === 'Sign Up' &&\n            <S.Field>\n              <div>CONFIRM PASSWORD</div>\n              <S.Input \n                type='password'\n                onChange={e => setConfirmPassword(e.target.value)}\n                value={confirmPassword}\n                error={submitted && (!confirmPassword || (password !== confirmPassword))}\n                />\n            </S.Field>\n          }\n          <S.Button\n            onClick={handleSubmit}\n          >\n            {modalType}\n          </S.Button>\n        </S.Modal>\n      ) : (\n        <S.Modal>\n          <S.Title>\n            {name} has {modalType === 'Sign Up' ? 'signed up!' : 'logged in!'}\n          </S.Title>\n          <S.Button\n            onClick={() => setModalType('')}\n          >\n            Close\n          </S.Button>\n        </S.Modal>\n      )}\n    </>\n  );\n}\n\nexport default LoginModal;","import {\n  SIGNUP_LOGIN,\n  LOGOUT,\n} from './types';\n\nexport const signupLogin = (email) => ({\n  type: SIGNUP_LOGIN,\n  payload: email,\n});\n\nexport const logout = () => ({\n  type: LOGOUT,\n});\n","import React, {useState} from 'react';\nimport * as S from './navbar.styles';\nimport {Link} from 'react-router-dom';\n\nimport {useSelector, useDispatch} from 'react-redux';\nimport { logout } from '../../../redux/actions';\n\nimport LoginModal from '../loginModal/loginModal';\n\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector(state => state.currentUser);\n  \n  const [modalType, setModalType] = useState('');\n\n  return (\n    <>\n      {modalType && \n        <LoginModal \n          modalType={modalType}\n          setModalType={setModalType}\n        />\n      }\n      <S.Navbar>\n        <S.Title\n          as={Link}\n          to='/'\n        >\n          SCHWIFTYPEDIA\n        </S.Title>\n        <S.NavLinks>\n          {currentUser.email ? (\n            <>\n              <div>{currentUser.email}</div>\n              <S.NavLink\n                onClick={() => dispatch(logout())}\n              >\n                LOGOUT\n              </S.NavLink>\n            </>\n          ) : (\n            <>\n              <S.NavLink\n                onClick={() => setModalType('Sign Up')}\n              >\n                SIGN UP\n              </S.NavLink>\n              <S.NavLink\n                onClick={() => setModalType('Login')}\n              >\n                LOGIN\n              </S.NavLink>\n            </>\n          )}\n        </S.NavLinks>\n      </S.Navbar>\n    </>\n  )\n};\n\nexport default Navbar;","import styled from 'styled-components';\n\nexport const Home = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  padding-top: 80px;\n\n  @media (max-width: 900px) {\n    flex-direction: column;\n    padding: 40px 0;\n    position: relative;\n  }\n`;\n\nexport const Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 15px 0;\n  width: 200px;\n  margin: 20px;\n  cursor: pointer;\n  background: green;\n  margin-top: 20px;\n  border-radius: 3px;\n  color: white;\n  font-weight: 600;\n  text-decoration: none;\n\n  @media (max-width: 900px) {\n    margin: 40px 0;\n  }\n\n  &:hover {\n    transform: scale(1.08);\n  }\n`;\n\nexport const MainImage = styled.img`\n  width: 300px;\n\n  @media (max-width: 900px) {\n    position: relative;\n  }\n`;\n\nexport const VolumeIcon = styled.img`\n  width: 50px;\n  cursor: pointer;\n  position: absolute;\n  bottom: 20px;\n  right: 20px;\n  opacity: ${({muted}) => muted ? '0.5' : '1'};\n\n  @media (max-width: 900px) {\n    top: 0px;\n  }\n`;","export default __webpack_public_path__ + \"static/media/get_schwifty.001b8fff.mp3\";","export default __webpack_public_path__ + \"static/media/volume-icon.0ed76ab0.png\";","export default __webpack_public_path__ + \"static/media/rick-morty.df79dbf0.jpg\";","import React, {useState} from 'react';\nimport * as S from './home.styles';\nimport {Link} from 'react-router-dom';\n\nimport getSchwifty from '../../assets/audio/get_schwifty.mp3';\nimport volumeIcon from '../../assets/images/volume-icon.png';\nimport mainImage from '../../assets/images/rick-morty.jpg';\n\nconst Home = () => {\n  const [muted, setMuted] = useState(true);\n\n  const handleSongToggle = () => {\n    const song = document.getElementById('get-schwifty');\n\n    if (muted) {\n      song.play()\n      setMuted(false);\n    } else {\n      song.pause();\n      setMuted(true);\n    }\n  }\n\n  return (\n    <>\n      <audio         \n        id='get-schwifty'\n      >\n        <source \n          type='audio/mp3'\n          src={getSchwifty}\n          muted='muted'\n        />\n      </audio>\n      <S.Home>\n        <S.Button\n          as={Link}\n          to='/characters'\n        >\n          CHARACTERS\n        </S.Button>\n        <S.MainImage \n          src={mainImage}\n          alt='Rick and Morty'\n        />\n        <S.Button\n          as={Link}\n          to='/episodes'\n        >\n          EPISODES\n        </S.Button>\n        <S.VolumeIcon \n          src={volumeIcon}\n          alt='Volume Icon'\n          onClick={handleSongToggle}\n          muted={muted}\n        />\n      </S.Home>\n    </>\n  );\n}\n\nexport default Home;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 10vw 80px;\n  color: white;\n  font-weight: 700;\n  margin-top: 40px;\n`;\n\nexport const Title = styled.div`\n  font-size: 36px;\n`;\n\nexport const Characters = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  grid-gap: 30px;\n  margin-top: 25px;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: white;\n  text-align: center;\n  font-weight: 700;\n  font-size: 36px;\n  margin: 80px auto;\n  width: 80%;\n`;","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 25px 35px;\n  background: #eeeeee;\n  border-radius: 5px;\n  color: black;\n  font-weight: 500;\n  box-sizing: border-box;\n`;\n\nexport const Label = styled.div`\n  font-weight: 800;\n  margin: 15px 0 3px;\n`;\n\nexport const MoreInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 25px;\n  cursor: pointer;\n  background: green;\n  border-radius: 3px;\n  color: white;\n  margin-top: 20px;\n  font-weight: 600;\n`;","import React from 'react';\nimport * as S from './characterCard.styles';\n\nconst CharacterCard = (props) => {\n  const { \n    character,\n    setModalCharacter,\n  } = props;\n\n  const handleMoreInfo = () => {\n    window.scrollTo(0,0);\n    setModalCharacter(character)\n  }\n\n  return (\n    <S.Card>\n      <div>\n        <S.Label>NAME:</S.Label>\n        <div>{character.name}</div>\n        <S.Label>ORIGIN:</S.Label>\n        <div>{character.origin?.name}</div>\n      </div>\n      <S.MoreInfo\n        onClick={handleMoreInfo}\n      >\n        More Information\n      </S.MoreInfo>\n    </S.Card>\n  );\n}\n\nexport default CharacterCard;","import styled from 'styled-components';\n\nexport const Modal = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #EEEEEE;\n  padding: 40px 50px;\n  border-radius: 5px;\n  font-weight: 500;\n  position: absolute;\n  z-index: 100;\n  top: 45px;\n  left: calc(50% - 240px);\n  box-shadow: 0 30px 30px black;\n  width: 380px;\n\n  @media (max-width: 500px) {\n    width: calc(95% - 100px);\n    left: 2.5%;\n  }\n`;\n\nexport const XButton = styled.div`\n  color: gray;\n  position: absolute;\n  top: 10px;\n  right: 12px;\n  cursor: pointer;\n`;\n\nexport const Title = styled.div`\n  font-size: 28px;\n  line-height: 32px;\n  font-weight: 800;\n  text-align: center;\n`;\n\nexport const Image = styled.img`\n  width: 75%;\n  margin: 20px auto 5px;\n`;\n\nexport const Info = styled.div`\n  height: 250px;\n  padding: 10px 0;\n  overflow-y: auto;\n`;\n\nexport const Label = styled.div`\n  font-weight: 800;\n  margin: 15px 0 3px;\n`;\n\nexport const Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 15px 30px;\n  cursor: pointer;\n  background: green;\n  margin-top: 5px;\n  border-radius: 3px;\n  color: white;\n  font-weight: 600;\n`;","import React, { useState, useEffect } from 'react';\nimport * as S from './characterModal.styles';\n\nimport axios from 'axios';\n\n\nconst CharacterModal = (props) => {\n  const {\n    character,\n    setModalCharacter,\n  } = props;\n  \n  const [episodeNames, setEpisodeNames] = useState([]);\n\n  useEffect(() => {\n    let episodes = [];\n\n    character.episode.forEach(async episodeUrl => {\n      const responseJson = await axios.get(episodeUrl);\n      episodes.push(responseJson.data.name);\n\n      if (episodes.length === character.episode.length) {\n        setEpisodeNames(episodes);\n      }\n    });\n  }, [character.episode]);\n\n  return (\n    <S.Modal>\n      <S.XButton\n        onClick={() => setModalCharacter({})}\n      >\n        X\n      </S.XButton>\n      <S.Title>{character.name}</S.Title>\n      <S.Image src={character.image} alt='Character Image' />\n      <S.Info>\n        <S.Label>ID</S.Label>\n        <div>{character.id}</div>      \n        <S.Label>CREATED</S.Label>\n        <div>{character.created}</div>\n        <S.Label>GENDER</S.Label>\n        <div>{character.gender || 'Unknown'}</div>\n        <S.Label>LOCATION</S.Label>\n        <div>{character.location?.name || 'Unknown'}</div>\n        <S.Label>ORIGIN</S.Label>\n        <div>{character.origin?.name || 'Unknown'}</div>\n        <S.Label>SPECIES</S.Label>\n        <div>{character.species || 'Unknown'}</div>\n        <S.Label>STATUS</S.Label>\n        <div>{character.status || 'Unknown'}</div>\n        <S.Label>TYPE</S.Label>\n        <div>{character.type || 'Unknown'}</div>\n        <S.Label>EPISODES</S.Label>\n        {episodeNames.map((episodeName, i) =>\n          <div \n            key={`ep-${i}`}\n          >\n            {episodeName}\n          </div>\n        )}\n      </S.Info>\n      <S.Button\n        onClick={() => setModalCharacter({})}\n      >\n        Close\n      </S.Button>\n    </S.Modal>\n  );\n}\n\nexport default CharacterModal;","import React, {useState, useEffect} from 'react';\nimport * as S from './characters.styles';\nimport axios from 'axios';\n\nimport CharacterCard from './characterCard/characterCard';\nimport CharacterModal from './characterModal/characterModal';\n\n\nconst Characters = () => {\n  const [characters, setCharacters] = useState([]);\n  const [modalCharacter, setModalCharacter] = useState({});\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const characterIds = [];\n    for (let i = 1; i < 23; i++) {\n      characterIds.push(i);\n    }\n\n    (async () => {\n      try {\n        const responseJson = await axios.get(`https://rickandmortyapi.com/api/character/${characterIds}`);\n        setCharacters(responseJson.data);\n      } catch {\n        setError('Error fetching characters, please try again later.');\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      {modalCharacter.id &&\n        <CharacterModal \n          character={modalCharacter} \n          setModalCharacter={setModalCharacter}\n        />\n      }\n      {!error ? (\n        <S.Container>\n          <S.Title>CHARACTERS</S.Title>\n          <S.Characters>\n            {characters.map((character, i) =>\n              <CharacterCard \n                key={`char-${i}`} \n                character={character} \n                setModalCharacter={setModalCharacter}\n              />\n            )}\n          </S.Characters>\n        </S.Container>\n      ) : (\n        <S.ErrorMessage>{error}</S.ErrorMessage>\n      )}\n    </>\n  );\n}\n\nexport default Characters;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 10vw 80px;\n  color: white;\n  font-weight: 700;\n  margin-top: 40px;\n`;\n\nexport const Title = styled.div`\n  font-size: 36px;\n`;\n\nexport const Episodes = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  grid-gap: 30px;\n  margin-top: 25px;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: white;\n  text-align: center;\n  font-weight: 700;\n  font-size: 36px;\n  margin: 80px auto;\n  width: 80%;\n`;","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 25px 35px;\n  background: #eeeeee;\n  border-radius: 5px;\n  color: black;\n  font-weight: 500;\n  box-sizing: border-box;\n`;\n\nexport const Label = styled.div`\n  font-weight: 800;\n  margin: 15px 0 3px;\n`;\n\nexport const MoreInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 25px;\n  cursor: pointer;\n  background: green;\n  border-radius: 3px;\n  color: white;\n  margin-top: 20px;\n  font-weight: 600;\n`;","import React from 'react';\nimport * as S from './episodeCard.styles';\n\nconst EpisodeCard = (props) => {\n  const { \n    episode,\n    setModalEpisode,\n  } = props;\n\n  const handleMoreInfo = () => {\n    window.scrollTo(0,0);\n    setModalEpisode(episode)\n  }\n\n  return (\n    <S.Card>\n      <div>\n        <S.Label>NAME:</S.Label>\n        <div>{episode.name}</div>\n        <S.Label>AIR DATE:</S.Label>\n        <div>{episode.air_date}</div>\n      </div>\n      <S.MoreInfo\n        onClick={handleMoreInfo}\n      >\n        More Information\n      </S.MoreInfo>\n    </S.Card>\n  );\n}\n\nexport default EpisodeCard;","import styled from 'styled-components';\n\nexport const Modal = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #EEEEEE;\n  padding: 40px 50px;\n  border-radius: 5px;\n  font-weight: 500;\n  position: absolute;\n  z-index: 100;\n  top: 45px;\n  left: calc(50% - 240px);\n  box-shadow: 0 30px 30px black;\n  width: 380px;\n\n  @media (max-width: 500px) {\n    width: calc(95% - 100px);\n    left: 2.5%;\n  }\n`;\n\nexport const XButton = styled.div`\n  color: gray;\n  position: absolute;\n  top: 10px;\n  right: 12px;\n  cursor: pointer;\n`;\n\nexport const Title = styled.div`\n  font-size: 28px;\n  line-height: 32px;\n  font-weight: 800;\n  text-align: center;\n`;\n\nexport const Info = styled.div`\n  height: 250px;\n  padding: 10px 0;\n  overflow-y: auto;\n`;\n\nexport const Label = styled.div`\n  font-weight: 800;\n  margin: 15px 0 3px;\n`;\n\nexport const Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 15px 30px;\n  cursor: pointer;\n  background: green;\n  margin-top: 5px;\n  border-radius: 3px;\n  color: white;\n  font-weight: 600;\n`;","import React, { useState, useEffect } from 'react';\nimport * as S from './episodeModal.styles';\n\nimport axios from 'axios';\n\n\nconst EpisodeModal = (props) => {\n  const {\n    episode,\n    setModalEpisode,\n  } = props;\n  \n  const [characterNames, setCharacterNames] = useState([]);\n\n  useEffect(() => {\n    let characters = [];\n\n    episode.characters.forEach(async characterUrl => {\n      const responseJson = await axios.get(characterUrl);\n      characters.push(responseJson.data.name);\n\n      if (characters.length === episode.characters.length) {\n        setCharacterNames(characters);\n      }\n    });\n  }, [episode.characters]);\n\n  return (\n    <S.Modal>\n      <S.XButton\n        onClick={() => setModalEpisode({})}\n      >\n        X\n      </S.XButton>\n      <S.Title>{episode.name}</S.Title>\n      <S.Info>\n        <S.Label>ID</S.Label>\n        <div>{episode.id}</div>\n        <S.Label>EPISODE</S.Label>\n        <div>{episode.episode || 'Unknown'}</div>      \n        <S.Label>CREATED</S.Label>\n        <div>{episode.created}</div>\n        <S.Label>AIR DATE</S.Label>\n        <div>{episode.air_date || 'Unknown'}</div>\n        <S.Label>CHARACTERS</S.Label>\n        {characterNames.map((characterName, i) =>\n          <div \n            key={`ep-${i}`}\n          >\n            {characterName}\n          </div>\n        )}\n      </S.Info>\n      <S.Button\n        onClick={() => setModalEpisode({})}\n      >\n        Close\n      </S.Button>\n    </S.Modal>\n  );\n}\n\nexport default EpisodeModal;","import React, {useState, useEffect} from 'react';\nimport * as S from './episodes.styles';\nimport axios from 'axios';\n\nimport EpisodeCard from './episodeCard/episodeCard';\nimport EpisodeModal from './episodeModal/episodeModal';\n\n\nconst Episodes = () => {\n  const [episodes, setEpisodes] = useState([]);\n  const [modalEpisode, setModalEpisode] = useState({});\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const episodeIds = [];\n    for (let i = 1; i < 19; i++) {\n      episodeIds.push(i);\n    }\n\n    (async () => {\n      try {\n        const responseJson = await axios.get(`https://rickandmortyapi.com/api/episode/${episodeIds}`);\n        setEpisodes(responseJson.data);\n      } catch {\n        setError('Error fetching episodes, please try again later.');\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      {modalEpisode.id &&\n        <EpisodeModal \n          episode={modalEpisode} \n          setModalEpisode={setModalEpisode}\n        />\n      }\n      {!error ? (\n        <S.Container>\n          <S.Title>EPISODES</S.Title>\n          <S.Episodes>\n            {episodes.map((episode, i) =>\n              <EpisodeCard \n                key={`ep-${i}`} \n                episode={episode} \n                setModalEpisode={setModalEpisode}\n              />\n            )}\n          </S.Episodes>\n        </S.Container>\n      ) : (\n        <S.ErrorMessage>{error}</S.ErrorMessage>\n      )}\n    </>\n  );\n}\n\nexport default Episodes;\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\n\nimport Navbar from './components/navbar/navbar/navbar';\nimport Home from './pages/home/home';\nimport Characters from './pages/characters/characters';\nimport Episodes from './pages/episodes/episodes';\n\n\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path='/abc-tnf' component={Home} />\n        <Route exact path='/abc-tnf/characters' component={Characters} />\n        <Route exact path='/abc-tnf/episodes' component={Episodes} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import {persistReducer} from 'redux-persist';\nimport {createWhitelistFilter} from 'redux-persist-transform-filter';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  SIGNUP_LOGIN,\n  LOGOUT,\n} from './types';\n\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  transforms: [\n    createWhitelistFilter('reducer', ['currentUser'])\n  ]\n};\n\n\nconst INITIAL_STATE = {\n  currentUser: {},\n  modal: { open: false },\n};\n\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGNUP_LOGIN:\n      return {\n        ...state,\n        currentUser: {email: action.payload},\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        currentUser: {},\n      };\n    default:\n      return {...state};\n  }\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport default persistedReducer;","import {createStore} from 'redux';\nimport persistedReducer from './reducer';\nimport {persistStore} from 'redux-persist';\n\nexport const store = createStore(persistedReducer);\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport {Provider} from 'react-redux';\nimport {store, persistor} from './App/redux/store';\nimport {BrowserRouter} from 'react-router-dom';\nimport {PersistGate} from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}